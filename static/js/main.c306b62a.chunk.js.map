{"version":3,"sources":["actions.js","Components/Calculator/Button.js","Components/Calculator/Screen.js","Components/Calculator/Calculator.js","reducers.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setNumber","numberType","addedNumber","type","connect","state","display","firstNumber","secondNumber","operator","props","style","alignItems","outline","flex","size","justifyContent","background","onClick","e","dispatch","target","getAttribute","value","Screen","color","fontSize","displayValue","className","minHeight","maxWidth","margin","flexDirection","setDisplayValue","initialState","calcResult","reducer","action","Object","assign","parseInt","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c306b62a.chunk.js","sourcesContent":["// Action types\nexport const SET_FIRSTNUMBER = \"SET_FIRSTNUMBER\";\nexport const SET_SECONDNUMBER = \"SET_SECONDNUMBER\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const CALC = \"CALC\";\nexport const CLEAR = \"CLEAR\";\n\n// Action creators\nexport function setNumber(numberType, addedNumber) {\n  if (numberType === 0) {\n    return {\n      type: SET_FIRSTNUMBER,\n      addedNumber\n    };\n  } else if (numberType === 1) {\n    return {\n      type: SET_SECONDNUMBER,\n      addedNumber\n    };\n  }\n}\n\nexport function setOperator(operator) {\n  return {\n    type: SET_OPERATOR,\n    operator\n  };\n}\n\nexport function clearNumbers() {\n  return {\n    type: CLEAR\n  };\n}\n\nexport function calcResult() {\n  return {\n    type: CALC\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  calcResult,\n  clearNumbers,\n  setNumber,\n  setOperator\n} from \"../../actions.js\";\n\nlet Button = function(props) {\n  const handleClick = e => {\n    switch (props.type) {\n      case \"number\":\n        if (props.operator === null) {\n          props.dispatch(setNumber(0, e.target.getAttribute(\"value\")));\n        } else {\n          props.dispatch(setNumber(1, e.target.getAttribute(\"value\")));\n        }\n        break;\n      case \"operation\":\n        props.dispatch(setOperator(e.target.getAttribute(\"value\")));\n        break;\n      case \"clear\":\n        props.dispatch(clearNumbers());\n        break;\n      case \"result\":\n        props.dispatch(calcResult());\n        break;\n      default:\n        props.dispatch(clearNumbers());\n    }\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        outline: \"1px black solid\",\n        flex: props.size === \"large\" ? 2 : 1,\n        justifyContent: \"center\",\n        background:\n          props.type === \"number\"\n            ? \"#4d4d4d\"\n            : props.type === \"operation\"\n            ? \"rgb(102, 102, 102)\"\n            : props.type === \"result\"\n            ? \"rgb(0, 68, 102)\"\n            : \"rgb(172, 57, 57)\"\n      }}\n      onClick={handleClick}\n      value={props.value}\n    >\n      {props.value}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    display: state.display,\n    firstNumber: state.firstNumber,\n    secondNumber: state.secondNumber,\n    operator: state.operator\n  };\n};\n\nexport default connect(mapStateToProps)(Button);\n","import React from \"react\";\n\nlet Screen = function(props) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        background: \"black\",\n        color: \"white\",\n        outline: \"1px solid black\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        flex: \"1\",\n        fontSize: \"40px\"\n      }}\n    >\n      {props.displayValue}\n    </div>\n  );\n};\n\nexport default Screen;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"./Button\";\nimport Screen from \"./Screen\";\n\nconst Calculator = function(props) {\n  function setDisplayValue(displayValue) {\n    switch (displayValue) {\n      case \"firstNumber\":\n        return props.firstNumber;\n      case \"secondNumber\":\n        return props.secondNumber;\n      case \"operator\":\n        return props.operator;\n      default:\n        return props.firstNumber;\n    }\n  }\n  return (\n    <div\n      className=\"container\"\n      style={{\n        minHeight: \"100vh\",\n        maxWidth: \"500px\",\n        margin: \"auto\",\n        flexDirection: \"column\"\n      }}\n    >\n      <Screen displayValue={setDisplayValue(props.display)} />\n      <div\n        style={{\n          display: \"flex\",\n          outline: \"1px black solid\",\n          flex: \"5\"\n        }}\n      >\n        <div\n          className=\"container\"\n          style={{\n            flexDirection: \"column\",\n            flex: \"3\"\n          }}\n        >\n          <div className=\"container\" style={{ flex: 1 }}>\n            <Button value=\"AC\" size=\"large\" type=\"clear\"></Button>\n            <Button value=\"/\" type=\"operation\"></Button>\n          </div>\n          <div className=\"container\" style={{ flex: 1 }}>\n            <Button value=\"7\" type=\"number\"></Button>\n            <Button value=\"8\" type=\"number\"></Button>\n            <Button value=\"9\" type=\"number\"></Button>\n          </div>\n          <div className=\"container\" style={{ flex: 1 }}>\n            <Button value=\"4\" type=\"number\"></Button>\n            <Button value=\"5\" type=\"number\"></Button>\n            <Button value=\"6\" type=\"number\"></Button>\n          </div>\n          <div className=\"container\" style={{ flex: 1 }}>\n            <Button value=\"1\" type=\"number\"></Button>\n            <Button value=\"2\" type=\"number\"></Button>\n            <Button value=\"3\" type=\"number\"></Button>\n          </div>\n          <div className=\"container\" style={{ flex: 1 }}>\n            <Button value=\"0\" size=\"large\" type=\"number\"></Button>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: \"1\"\n          }}\n        >\n          <Button value=\"x\" type=\"operation\"></Button>\n          <Button value=\"-\" type=\"operation\"></Button>\n          <Button value=\"+\" type=\"operation\"></Button>\n          <Button value=\"=\" size=\"large\" type=\"result\"></Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    display: state.display,\n    firstNumber: state.firstNumber,\n    secondNumber: state.secondNumber,\n    operator: state.operator\n  };\n};\n\nexport default connect(mapStateToProps)(Calculator);\n","import {\n  SET_FIRSTNUMBER,\n  SET_SECONDNUMBER,\n  SET_OPERATOR,\n  CALC,\n  CLEAR\n} from \"./actions.js\";\n\nconst initialState = {\n  display: \"firstNumber\",\n  firstNumber: 0,\n  secondNumber: 0,\n  operator: null\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_FIRSTNUMBER:\n      return Object.assign({}, state, {\n        firstNumber: state.firstNumber * 10 + parseInt(action.addedNumber)\n      });\n    case SET_SECONDNUMBER:\n      return Object.assign({}, state, {\n        secondNumber: state.secondNumber * 10 + parseInt(action.addedNumber),\n        display: \"secondNumber\"\n      });\n    case SET_OPERATOR:\n      return Object.assign({}, state, {\n        operator: action.operator,\n        display: \"operator\"\n      });\n    case CALC:\n      return Object.assign({}, state, {\n        display: \"firstNumber\",\n        firstNumber: calcResult(\n          state.firstNumber,\n          state.secondNumber,\n          state.operator\n        ),\n        secondNumber: 0,\n        operator: null\n      });\n    case CLEAR:\n      return initialState;\n    default:\n      return state;\n  }\n}\n\nfunction calcResult(firstNumber, secondNumber, operator) {\n  switch (operator) {\n    case \"+\":\n      return firstNumber + secondNumber;\n    case \"-\":\n      return firstNumber - secondNumber;\n    case \"x\":\n      return firstNumber * secondNumber;\n    case \"/\":\n      return firstNumber / secondNumber;\n    default:\n      return firstNumber;\n  }\n}\n\nexport default reducer;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport Calculator from \"./Components/Calculator/Calculator.js\";\nimport store from \"./store\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Calculator></Calculator>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}